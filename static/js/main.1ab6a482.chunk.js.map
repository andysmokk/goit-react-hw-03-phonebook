{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Phonebook/Phonebook.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","addContact","onSubmit","props","id","checkContactList","contacts","normalizedName","toLocaleLowerCase","find","contact","alert","onFormChange","target","value","setState","onSubmitForm","e","preventDefault","resetForm","this","className","s","form","label","htmlFor","span","input","type","placeholder","pattern","title","required","onChange","btn","Component","ContactList","onDeleteContact","ul","map","li","onClick","Filter","Phonebook","filter","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","box","divBox","boxList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ab6a482.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__27BEk\",\"label\":\"ContactForm_label__3oLDW\",\"input\":\"ContactForm_input__3RZ0S\",\"span\":\"ContactForm_span__3dp-7\",\"btn\":\"ContactForm_btn__3doLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__1L1qI\",\"ul\":\"ContactList_ul__L_DfK\",\"btn\":\"ContactList_btn__3SDxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__12rCs\",\"span\":\"Filter_span__2hpz6\",\"input\":\"Filter_input__f_nTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__N_JwG\",\"box\":\"Phonebook_box__3sFS4\",\"divBox\":\"Phonebook_divBox__hFj3S\",\"boxList\":\"Phonebook_boxList__2yE6N\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  addContact = () => {\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n    const newContactId = shortid.generate();\n    const newContact = { name, number, id: newContactId };\n    onSubmit(newContact);\n  };\n\n  checkContactList = () => {\n    const { contacts } = this.props;\n    const { name } = this.state;\n    const normalizedName = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\n    )\n      ? alert(`${name} is already in contacts`)\n      : this.addContact();\n  };\n\n  onFormChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmitForm = e => {\n    e.preventDefault();\n    this.resetForm();\n    this.checkContactList();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.onSubmitForm}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          <span className={s.span}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Григор Григорян\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.onFormChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          <span className={s.span}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-22-33\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.onFormChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      <span className={s.span}>Find contacts by name</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport s from './Phonebook.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = contact => {\n    const { contacts } = this.state;\n    this.setState({ contacts: [contact, ...contacts] });\n  };\n\n  changeFilter = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const {\n      state,\n      formSubmitHandler,\n      changeFilter,\n      deleteContact,\n      getFilteredContacts,\n    } = this;\n    const { contacts, filter } = state;\n\n    return (\n      <div className={s.box}>\n        <div>\n          <h1 className={s.title}>Phonebook</h1>\n          <ContactForm onSubmit={formSubmitHandler} contacts={contacts} />\n        </div>\n        <div className={s.divBox}>\n          <h2 className={s.title}>Contacts</h2>\n          <div className={s.boxList}>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactList\n              contacts={getFilteredContacts()}\n              onDeleteContact={deleteContact}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}